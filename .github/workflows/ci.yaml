name: "🔍 Basic Nix CI"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

# Configure permissions for the job
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  validate-nix:
    name: "✅ Validate Nix Configuration"
    runs-on: ubuntu-latest  # Using ubuntu-latest for consistency
    timeout-minutes: 10

    steps:
      - name: "🔽 Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for commit analysis

      - name: "⬇️ Install Nix"
        uses: DeterminateSystems/nix-installer-action@v9
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            warn-dirty = false

      - name: "🔍 Validate Flake Structure"
        run: |
          echo "🔍 Validating flake structure..."
          nix flake show --no-write-lock-file

      - name: "✅ Check Flake Evaluation"
        run: |
          echo "🔍 Evaluating flake outputs..."
          nix flake check --no-write-lock-file --show-trace

      - name: "📏 Check Code Formatting"
        run: |
          echo "🔍 Checking code formatting with alejandra..."
          nix run nixpkgs#alejandra -- --check .

      - name: "🧹 Run Statix Linter"
        run: |
          echo "🔍 Running Statix linter..."
          nix run nixpkgs#statix check

      - name: "🧹 Run Deadnix Check"
        run: |
          echo "🔍 Checking for dead Nix code..."
          nix run nixpkgs#deadnix -- --fail

      - name: "📊 Report Results"
        if: always()
        run: |
          echo "✅ All validation checks completed successfully!"
          echo "::notice::✅ All Nix configuration validations passed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}